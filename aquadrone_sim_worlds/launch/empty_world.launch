<launch>
    <arg name="gui" default="true"/>
    <arg name="paused" default="false"/>
    <arg name="set_timeout" default="false"/>
    <arg name="timeout" default="0.0"/>
    <arg name="debug" default="false"/>

    <!-- Use Xacro to prepare world with arguments to control simulation time-->
    <arg name="computation_factor" default="1"/>

    <!-- These versions may modify how fast the simulation runs-->
    <!--
    <arg name="max_step_size" value="0.002"/>
    <arg name="real_time_update_rate" value="$(eval 500*arg('computation_factor'))"/>
    -->
    <!--
    <arg name="max_step_size" value="$(eval 0.002/arg('computation_factor'))"/>
    <arg name="real_time_update_rate" value="500"/>
    -->

    <!-- this method should try to keep the sim running at real-time, unless out of cpu power-->
    <arg name="max_step_size" value="$(eval 0.002/arg('computation_factor'))"/>
    <arg name="real_time_update_rate" value="$(eval 500*arg('computation_factor'))"/>
    
    
    

    <node name="xacro" pkg="xacro" type="xacro"
         args="--inorder -o $(find aquadrone_sim_worlds)/worlds/empty_underwater_timed.world $(find aquadrone_sim_worlds)/worlds/empty_underwater.world max_step_size:=$(arg max_step_size) real_time_update_rate:=$(arg real_time_update_rate)"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find aquadrone_sim_worlds)/worlds/empty_underwater_timed.world"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="true"/>
    </include>

    <include file="$(find uuv_assistants)/launch/publish_world_ned_frame.launch"/>

    <node name="publish_world_models"
        pkg="uuv_assistants"
        type="publish_world_models.py"
        output="screen">
        <rosparam subst_value="true">
            meshes:
                seafloor:
                    plane: [2000, 2000, 0.1]
                    pose:
                        position: [0, 0, -100]
                north:
                    plane: [0.1, 2000, 100]
                    pose:
                        position: [1000, 0, -50]
                south:
                    plane: [0.1, 2000, 100]
                    pose:
                        position: [-1000, 0, -50]
                west:
                    plane: [2000, 0.1, 100]
                    pose:
                        position: [0, -1000, -50]
                east:
                    plane: [2000, 0.1, 100]
                    pose:
                        position: [0, 1000, -50]
        </rosparam>
    </node>

    <group if="$(arg set_timeout)">
        <include file="$(find uuv_assistants)/launch/set_simulation_timer.launch">
            <arg name="timeout" value="$(arg timeout)"/>
        </include>
    </group>

</launch>
